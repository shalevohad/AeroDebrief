<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CreateStartMenuShortcut" xml:space="preserve">
    <value>创建开始菜单快捷方式</value>
  </data>
  <data name="dcsPathButton" xml:space="preserve">
    <value>浏览</value>
  </data>
  <data name="InstallButton" xml:space="preserve">
    <value>安装 / 更新 DCS-SRS</value>
  </data>
  <data name="InstallingButton" xml:space="preserve">
    <value>正在安装...</value>
  </data>
  <data name="InstallScriptsCheckbox" xml:space="preserve">
    <value>安装DCS客户端脚本 - 只有SRS客户端需要，仅开服不需要</value>
  </data>
  <data name="intro" xml:space="preserve">
    <value>简单无线电独立版 (SRS) 安装程序 -</value>
  </data>
  <data name="MsgBoxChange" xml:space="preserve">
    <value>更改安装设置？</value>
  </data>
  <data name="MsgBoxChangeText" xml:space="preserve">
    <value>你想要更改设置吗？

是 - 暂停安装以进行修改

否 - 以先前的安装路径和脚本作为默认

如果不确定，猛击“是”！</value>
  </data>
  <data name="MsgBoxDCS" xml:space="preserve">
    <value>请先退出DCS</value>
  </data>
  <data name="MsgBoxDCSText" xml:space="preserve">
    <value>安装或卸载只有在DCS关闭时才能进行！

退出DCS后重试</value>
  </data>
  <data name="MsgBoxExtracted" xml:space="preserve">
    <value>请先解压</value>
  </data>
  <data name="MsgBoxExtracted2" xml:space="preserve">
    <value>没有解压</value>
  </data>
  <data name="MsgBoxExtractedText" xml:space="preserve">
    <value>请解压整个安装压缩包至一个文件夹，再从文件夹内运行Installer。

不要在压缩包里运行Installer，跑 不 起 来！</value>
  </data>
  <data name="MsgBoxExtractedText2" xml:space="preserve">
    <value>未找到安装所需文件，无法安装。

在运行Installer之前，请确保你解压了整个压缩包。</value>
  </data>
  <data name="MsgBoxFolder" xml:space="preserve">
    <value>SRS安装程序</value>
  </data>
  <data name="MsgBoxFolderText" xml:space="preserve">
    <value>在保存的游戏中找不到DCS文件夹！

请确认你的“保存的游戏 (Saved Games)”路径正确

你要选择的是”保存的游戏“文件夹本身，不是里面的DCS文件夹，也不是DCS的安装位置。</value>
  </data>
  <data name="MsgBoxInstallError" xml:space="preserve">
    <value>安装程序错误</value>
  </data>
  <data name="MsgBoxInstallErrorText" xml:space="preserve">
    <value>安装出错，请把你的”installer-log.txt“文件发到SRS的Discord频道以获取帮助</value>
  </data>
  <data name="MsgBoxInstallSuccessText" xml:space="preserve">
    <value>安装 / 更新成功完成！
DCS脚本已安装至:
</value>
  </data>
  <data name="MsgBoxInstallSuccessText2" xml:space="preserve">
    <value>安装 / 更新成功完成！</value>
  </data>
  <data name="MsgBoxInstallTitle" xml:space="preserve">
    <value>SRS安装程序</value>
  </data>
  <data name="MsgBoxRemovedText" xml:space="preserve">
    <value>SRS成功卸载！

器文件夹内的配置文件已保留，方便日后取用。</value>
  </data>
  <data name="MsgBoxRemovedText2" xml:space="preserve">
    <value>SRS成功卸载！</value>
  </data>
  <data name="MsgBoxUninstallError" xml:space="preserve">
    <value>卸载程序错误</value>
  </data>
  <data name="MsgBoxUninstallErrorText" xml:space="preserve">
    <value>卸载出错，请把你的”installer-log.txt“文件发到SRS的Discord频道以获取帮助</value>
  </data>
  <data name="MsgBoxUninstalling" xml:space="preserve">
    <value>正在卸载SRS</value>
  </data>
  <data name="RemoveButton" xml:space="preserve">
    <value>卸载 DCS-SRS</value>
  </data>
  <data name="ServerNote" xml:space="preserve">
    <value>请注意: 服务器使用需手动安装 DCS-SRS-AutoConnectGameGUI.lua。
此文件可在SRS安装目录中的Scripts文件夹内找到，内含安装说明。</value>
  </data>
  <data name="srPathButton" xml:space="preserve">
    <value>浏览</value>
  </data>
  <data name="step2" xml:space="preserve">
    <value>第一步: 选择SRS安装位置</value>
  </data>
  <data name="step3" xml:space="preserve">
    <value>第二步: 找到“保存的游戏”文件夹 - 非DCS</value>
  </data>
  <data name="step4" xml:space="preserve">
    <value>第三步: 安装或卸载 DCS-SRS</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>DCS-SRS 安装程序</value>
  </data>
</root>